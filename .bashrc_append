stty -ixon

export HISTSIZE=100000
export HISTFILESIZE=100000
shopt -s histappend

export PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

export RG_FILTER=('-g' '!db/data/*' '-g' '!**/vendor/*' '-g' '!**/fonts/*' '-g' '!spec/dummy/*' '-g' '!*.lock')
export RG_FILTER_SERIALIZED="${RG_FILTER[@]}"
export FZF_DEFAULT_COMMAND="rg --files --sort-files $RG_FILTER_SERIALIZED"
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
export FZF_DEFAULT_OPTS='--color=bg+:-1,fg+:3,hl+:1,info:-1 --no-bold --no-reverse --height=12'

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

PS1='${debian_chroot:+($debian_chroot)}\[\033[01;33m\]\D{%T}\[\033[00m\]\[\033[01;34m\] \w\[\033[00m\]\[\033[01;35m\]$(__git_ps1 " (%s)")\[\033[00m\] \$ '

export DISABLE_SPRING=1
export LESS="-SRin"
export EDITOR="vim"

# git + fzf helpers

is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

gf() {
  is_in_git_repo &&
    git -c color.status=always status --short |
    fzf --height 40% -m --ansi --nth 2..,.. | awk '{print $2}'
}

gb() {
  is_in_git_repo &&
    git branch -a -vv --color=always | grep -v '/HEAD\s' |
    fzf --height 40% --ansi --multi --tac | sed 's/^..//' | awk '{print $1}' |
    sed 's#^remotes/[^/]*/##'
}

gt() {
  is_in_git_repo &&
    git tag --sort -version:refname |
    fzf --height 40% --multi
}

gh() {
  is_in_git_repo &&
    git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph |
    fzf --height 40% --ansi --no-sort --reverse --multi | grep -o '[a-f0-9]\{7,\}'
}

gr() {
  is_in_git_repo &&
    git remote -v | awk '{print $1 " " $2}' | uniq |
    fzf --height 40% --tac | awk '{print $1}'
}

bind '"\er": redraw-current-line'
bind '"\C-g\C-f": "$(gf)\e\C-e\er"'
bind '"\C-g\C-a": "$(gb)\e\C-e\er"'
bind '"\C-g\C-t": "$(gt)\e\C-e\er"'
bind '"\C-g\C-h": "$(gh)\e\C-e\er"'
bind '"\C-g\C-r": "$(gr)\e\C-e\er"'
